# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains two jobq called "build", & "deploy"
  # This job will build the Angular project
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Use NodeJs To build the Angular project
      - name: Use Node.js 12.8
        uses: actions/setup-node@v1
        with: 
          node-version: 12.8
      # Install dependecies by running npm install
      - name: Install dependencies
        run: npm install
      # Build Angular project with prod tag 
      - name: Build
        run: npm run build -- --prod
      # To expose the results of the current job to the next job, I need to configure build job to upload the build artifacts.
      - name: Archive build
        if: success()
        uses: actions/upload-artifact@v1
        with:
          name: deploy_dist
          path: dist
        
  # This Job will deploy the Angular project to S3 and it need to wait for the build job
  deploy:
   # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [build]
   
  # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Download build #download the artifact
        uses: actions/download-artifact@v1
        with:
          name: deploy_dist
      # Deploy the generated dist/s3m-example folder to AWS S3 : AWS Credentials Are required
      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp \
            --recursive \
            --region us-east-2 \
            deploy_dist/s3m-example s3://s3m-bucket-angular
     
